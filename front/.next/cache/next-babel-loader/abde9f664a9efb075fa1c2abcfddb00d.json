{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nconst dummyUser = {\n  nickname: '제로초',\n  Post: [],\n  Followings: [],\n  Followers: [],\n  id: 1\n};\nexport const initialState = {\n  isLoggingOut: false,\n  // 로그아웃 시도중\n  isLoggingIn: false,\n  // 로그인 시도중\n  logInErrorReason: '',\n  // 로그인 실패 사윺\n  sifndUp: false,\n  // 회원가입 성공\n  isSigningUp: false,\n  // 회원가입 시도중\n  signUpErrorReason: false,\n  // 회원가입 실패 사유\n  me: null,\n  // 내 정보 // 로그인 여부\n  followingList: [],\n  // 팔로잉 리스트\n  followerList: [],\n  // 팔로워 리스트\n  userInfo: null,\n  // 남의 정보\n  isEditingNickname: false,\n  // 이름 변경 중\n  editNicknameErrorReason: '' // 이름 변경 실패 사유\n\n};\nexport const SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\nexport const SIGN_UP_FAILURE = 'SIGN_UP_FAILURE';\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST'; // 액션의 이름\n\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS'; // 액션의 이름\n\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE'; // 액션의 이름\n\nexport const LOAD_USER_REQUEST = 'LOAD_USER_REQUEST';\nexport const LOAD_USER_SUCCESS = 'LOAD_USER_SUCCESS';\nexport const LOAD_USER_FAILURE = 'LOAD_USER_FAILURE';\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\nexport const LOAD_FOLLOWERS_REQUEST = 'LOAD_FOLLOWERS_REQUEST';\nexport const LOAD_FOLLOWERS_SUCCESS = 'LOAD_FOLLOWERS_SUCCESS';\nexport const LOAD_FOLLOWERS_FAILURE = 'LOAD_FOLLOWERS_FAILURE';\nexport const LOAD_FOLLOWINGS_REQUEST = 'LOAD_FOLLOWINGS_REQUEST';\nexport const LOAD_FOLLOWINGS_SUCCESS = 'LOAD_FOLLOWINGS_SUCCESS';\nexport const LOAD_FOLLOWINGS_FAILURE = 'LOAD_FFOLLOWINGS_FAILURE';\nexport const FOLLOW_USER_REQUEST = 'FOLLOW_USER_REQUEST';\nexport const FOLLOW_USER_SUCCESS = 'FOLLOW_USER_SUCCESS';\nexport const FOLLOW_USER_FAILURE = 'FOLLOW_USER_FAILURE';\nexport const UNFOLLOW_USER_REQUEST = 'UNFOLLOW_USER_REQUEST';\nexport const UNFOLLOW_USER_SUCCESS = 'UNFOLLOW_USER_SUCCESS';\nexport const UNFOLLOW_USER_FAILURE = 'UNFOLLOW_USER_FAILURE';\nexport const REMOVE_FOLLOWER_REQUEST = 'REMOVE_FOLLOWER_REQUEST';\nexport const REMOVE_FOLLOWER_SUCCESS = 'REMOVE_FOLLOWER_SUCCESS';\nexport const REMOVE_FOLLOWER_FAILURE = 'REMOVE_FOLLOWER_FAILURE';\nexport const EDIT_NICKNAME_REQUEST = 'EDIT_NICKNAME_REQUEST';\nexport const EDIT_NICKNAME_SUCCESS = 'EDIT_NICKNAME_SUCCESS';\nexport const EDIT_NICKNAME_FAILURE = 'EDIT_NICKNAME_FAILURE';\nexport const ADD_POST_TO_ME = 'ADD_POST_TO_ME';\nexport default ((state = initialState, action) => {\n  switch (action.type) {\n    case LOG_IN_REQUEST:\n      {\n        return _objectSpread({}, state, {\n          isLoggingIn: true,\n          logInErrorReason: ''\n        });\n      }\n\n    case LOG_IN_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          isLoggingIn: false,\n          me: action.data,\n          isLoading: false\n        });\n      }\n\n    case LOG_IN_FAILURE:\n      {\n        return _objectSpread({}, state, {\n          isLoggingIn: false,\n          logInErrorReason: action.error,\n          me: null\n        });\n      }\n\n    case LOG_OUT_REQUEST:\n      {\n        return _objectSpread({}, state, {\n          isLoggingOut: true\n        });\n      }\n\n    case LOG_OUT_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          isLoggingOut: false,\n          me: null\n        });\n      }\n\n    case SIGN_UP_REQUEST:\n      {\n        return _objectSpread({}, state, {\n          isSigningUp: true,\n          isSignedUp: false,\n          signUpErrorReason: ''\n        });\n      }\n\n    case SIGN_UP_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          isSigningUp: false,\n          isSignedUp: true\n        });\n      }\n\n    case SIGN_UP_FAILURE:\n      {\n        return _objectSpread({}, state, {\n          isSigningUp: false,\n          signUpErrorReason: action.error\n        });\n      }\n\n    case LOAD_USER_REQUEST:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case LOAD_USER_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          me: action.data\n        });\n      }\n\n    case LOAD_USER_FAILURE:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case FOLLOW_USER_REQUEST:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case FOLLOW_USER_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          me: _objectSpread({}, state.me, {\n            Followings: [{\n              id: action.data\n            }, ...state.me.Followings]\n          })\n        });\n      }\n\n    case FOLLOW_USER_FAILURE:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case UNFOLLOW_USER_REQUEST:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case UNFOLLOW_USER_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          me: _objectSpread({}, state.me, {\n            Followings: state.me.Followings.filter(v => v.id !== action.data)\n          }),\n          followingList: state.followingList.filter(v => v.id !== action.data)\n        });\n      }\n\n    case UNFOLLOW_USER_FAILURE:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case ADD_POST_TO_ME:\n      {\n        return _objectSpread({}, state, {\n          me: _objectSpread({}, state.me, {\n            Posts: [{\n              id: action.data\n            }, ...state.me.Posts]\n          })\n        });\n      }\n\n    case LOAD_FOLLOWERS_REQUEST:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case LOAD_FOLLOWERS_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          followerList: action.data\n        });\n      }\n\n    case LOAD_FOLLOWERS_FAILURE:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case LOAD_FOLLOWINGS_REQUEST:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case LOAD_FOLLOWINGS_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          followingList: action.data\n        });\n      }\n\n    case LOAD_FOLLOWINGS_FAILURE:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case REMOVE_FOLLOWER_REQUEST:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case REMOVE_FOLLOWER_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          me: _objectSpread({}, state.me, {\n            Followers: state.me.Followers.filter(v => v.id !== action.data)\n          }),\n          followerList: state.followerList.filter(v => v.id !== action.data)\n        });\n      }\n\n    case REMOVE_FOLLOWER_FAILURE:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case EDIT_NICKNAME_REQUEST:\n      {\n        return _objectSpread({}, state, {\n          isEditingNickname: true,\n          editNicknameErrorReason: ''\n        });\n      }\n\n    case EDIT_NICKNAME_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          isEditingNickname: false,\n          me: _objectSpread({}, state.me, {\n            nickname: action.data\n          })\n        });\n      }\n\n    case EDIT_NICKNAME_FAILURE:\n      {\n        return _objectSpread({}, state, {\n          isEditingNickname: false,\n          editNicknameErrorReason: action.error\n        });\n      }\n\n    default:\n      {\n        return _objectSpread({}, state);\n      }\n  }\n});","map":{"version":3,"sources":["D:\\NodeBird\\front\\reducers\\user.js"],"names":["dummyUser","nickname","Post","Followings","Followers","id","initialState","isLoggingOut","isLoggingIn","logInErrorReason","sifndUp","isSigningUp","signUpErrorReason","me","followingList","followerList","userInfo","isEditingNickname","editNicknameErrorReason","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOAD_USER_REQUEST","LOAD_USER_SUCCESS","LOAD_USER_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","LOAD_FOLLOWERS_REQUEST","LOAD_FOLLOWERS_SUCCESS","LOAD_FOLLOWERS_FAILURE","LOAD_FOLLOWINGS_REQUEST","LOAD_FOLLOWINGS_SUCCESS","LOAD_FOLLOWINGS_FAILURE","FOLLOW_USER_REQUEST","FOLLOW_USER_SUCCESS","FOLLOW_USER_FAILURE","UNFOLLOW_USER_REQUEST","UNFOLLOW_USER_SUCCESS","UNFOLLOW_USER_FAILURE","REMOVE_FOLLOWER_REQUEST","REMOVE_FOLLOWER_SUCCESS","REMOVE_FOLLOWER_FAILURE","EDIT_NICKNAME_REQUEST","EDIT_NICKNAME_SUCCESS","EDIT_NICKNAME_FAILURE","ADD_POST_TO_ME","state","action","type","data","isLoading","error","isSignedUp","filter","v","Posts"],"mappings":"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","sourcesContent":["const dummyUser = {\r\n    nickname: '제로초',\r\n    Post: [],\r\n    Followings: [],\r\n    Followers: [],\r\n    id: 1,\r\n  };\r\n\r\nexport const initialState = {\r\n    isLoggingOut: false, // 로그아웃 시도중\r\n    isLoggingIn: false, // 로그인 시도중\r\n    logInErrorReason: '', // 로그인 실패 사윺\r\n    sifndUp: false, // 회원가입 성공\r\n    isSigningUp: false, // 회원가입 시도중\r\n    signUpErrorReason: false, // 회원가입 실패 사유\r\n    me:null, // 내 정보 // 로그인 여부\r\n    followingList:[], // 팔로잉 리스트\r\n    followerList:[], // 팔로워 리스트\r\n    userInfo:null, // 남의 정보\r\n    isEditingNickname: false, // 이름 변경 중\r\n    editNicknameErrorReason: '', // 이름 변경 실패 사유\r\n};\r\n\r\nexport const SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\r\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\r\nexport const SIGN_UP_FAILURE = 'SIGN_UP_FAILURE';\r\n\r\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST'; // 액션의 이름\r\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS'; // 액션의 이름\r\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE'; // 액션의 이름\r\n\r\nexport const LOAD_USER_REQUEST = 'LOAD_USER_REQUEST';\r\nexport const LOAD_USER_SUCCESS = 'LOAD_USER_SUCCESS';\r\nexport const LOAD_USER_FAILURE = 'LOAD_USER_FAILURE';\r\n\r\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\r\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\r\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\r\n\r\nexport const LOAD_FOLLOWERS_REQUEST = 'LOAD_FOLLOWERS_REQUEST';\r\nexport const LOAD_FOLLOWERS_SUCCESS = 'LOAD_FOLLOWERS_SUCCESS';\r\nexport const LOAD_FOLLOWERS_FAILURE = 'LOAD_FOLLOWERS_FAILURE';\r\n\r\nexport const LOAD_FOLLOWINGS_REQUEST = 'LOAD_FOLLOWINGS_REQUEST';\r\nexport const LOAD_FOLLOWINGS_SUCCESS = 'LOAD_FOLLOWINGS_SUCCESS';\r\nexport const LOAD_FOLLOWINGS_FAILURE = 'LOAD_FFOLLOWINGS_FAILURE';\r\n\r\nexport const FOLLOW_USER_REQUEST = 'FOLLOW_USER_REQUEST';\r\nexport const FOLLOW_USER_SUCCESS = 'FOLLOW_USER_SUCCESS';\r\nexport const FOLLOW_USER_FAILURE = 'FOLLOW_USER_FAILURE';\r\n\r\nexport const UNFOLLOW_USER_REQUEST = 'UNFOLLOW_USER_REQUEST';\r\nexport const UNFOLLOW_USER_SUCCESS = 'UNFOLLOW_USER_SUCCESS';\r\nexport const UNFOLLOW_USER_FAILURE = 'UNFOLLOW_USER_FAILURE';\r\n\r\nexport const REMOVE_FOLLOWER_REQUEST = 'REMOVE_FOLLOWER_REQUEST';\r\nexport const REMOVE_FOLLOWER_SUCCESS = 'REMOVE_FOLLOWER_SUCCESS';\r\nexport const REMOVE_FOLLOWER_FAILURE = 'REMOVE_FOLLOWER_FAILURE';\r\n\r\nexport const EDIT_NICKNAME_REQUEST = 'EDIT_NICKNAME_REQUEST';\r\nexport const EDIT_NICKNAME_SUCCESS = 'EDIT_NICKNAME_SUCCESS';\r\nexport const EDIT_NICKNAME_FAILURE = 'EDIT_NICKNAME_FAILURE';\r\n\r\nexport const ADD_POST_TO_ME = 'ADD_POST_TO_ME';\r\n\r\nexport default (state = initialState, action) => {\r\n    switch (action.type) {\r\n      case LOG_IN_REQUEST: {\r\n        return {\r\n          ...state,\r\n          isLoggingIn: true,\r\n          logInErrorReason: '',\r\n        };\r\n      }\r\n      case LOG_IN_SUCCESS: {\r\n        return {\r\n          ...state,\r\n          isLoggingIn: false,\r\n          me: action.data,\r\n          isLoading: false,\r\n        };\r\n      }\r\n      case LOG_IN_FAILURE: {\r\n        return {\r\n          ...state,\r\n          isLoggingIn: false,\r\n          logInErrorReason: action.error,\r\n          me: null,\r\n        };\r\n      }\r\n      case LOG_OUT_REQUEST: {\r\n        return {\r\n          ...state,\r\n          isLoggingOut: true,\r\n        };\r\n      }\r\n      case LOG_OUT_SUCCESS: {\r\n        return {\r\n          ...state,\r\n          isLoggingOut: false,\r\n          me: null,\r\n        };\r\n      }\r\n      case SIGN_UP_REQUEST: {\r\n        return {\r\n          ...state,\r\n          isSigningUp: true,\r\n          isSignedUp: false,\r\n          signUpErrorReason: '',\r\n        };\r\n      }\r\n      case SIGN_UP_SUCCESS: {\r\n        return {\r\n          ...state,\r\n          isSigningUp: false,\r\n          isSignedUp: true,\r\n        };\r\n      }\r\n      case SIGN_UP_FAILURE: {\r\n        return {\r\n          ...state,\r\n          isSigningUp: false,\r\n          signUpErrorReason: action.error,\r\n        };\r\n      }\r\n      case LOAD_USER_REQUEST: {\r\n        return {\r\n          ...state,\r\n        };\r\n      }\r\n      case LOAD_USER_SUCCESS: {\r\n        return {\r\n          ...state,\r\n          me: action.data,\r\n        };\r\n      }\r\n      case LOAD_USER_FAILURE: {\r\n        return {\r\n          ...state,\r\n        };\r\n      }\r\n      case FOLLOW_USER_REQUEST: {\r\n        return {\r\n          ...state,\r\n        };\r\n      }\r\n      case FOLLOW_USER_SUCCESS: {\r\n        return {\r\n          ...state,\r\n          me: {\r\n            ...state.me,\r\n            Followings: [{ id: action.data }, ...state.me.Followings],\r\n          },\r\n        };\r\n      }\r\n      case FOLLOW_USER_FAILURE: {\r\n        return {\r\n          ...state,\r\n        };\r\n      }\r\n      case UNFOLLOW_USER_REQUEST: {\r\n        return {\r\n          ...state,\r\n        };\r\n      }\r\n      case UNFOLLOW_USER_SUCCESS: {\r\n        return {\r\n          ...state,\r\n          me: {\r\n            ...state.me,\r\n            Followings: state.me.Followings.filter(v => v.id !== action.data),\r\n          },\r\n          followingList: state.followingList.filter(v => v.id !== action.data),\r\n        };\r\n      }\r\n      case UNFOLLOW_USER_FAILURE: {\r\n        return {\r\n          ...state,\r\n        };\r\n      }\r\n      case ADD_POST_TO_ME: {\r\n        return {\r\n          ...state,\r\n          me: {\r\n            ...state.me,\r\n            Posts: [{ id: action.data }, ...state.me.Posts],\r\n          },\r\n        };\r\n      }\r\n      case LOAD_FOLLOWERS_REQUEST: {\r\n        return {\r\n          ...state,\r\n        };\r\n      }\r\n      case LOAD_FOLLOWERS_SUCCESS: {\r\n        return {\r\n          ...state,\r\n          followerList: action.data,\r\n        };\r\n      }\r\n      case LOAD_FOLLOWERS_FAILURE: {\r\n        return {\r\n          ...state,\r\n        };\r\n      }\r\n      case LOAD_FOLLOWINGS_REQUEST: {\r\n        return {\r\n          ...state,\r\n        };\r\n      }\r\n      case LOAD_FOLLOWINGS_SUCCESS: {\r\n        return {\r\n          ...state,\r\n          followingList: action.data,\r\n        };\r\n      }\r\n      case LOAD_FOLLOWINGS_FAILURE: {\r\n        return {\r\n          ...state,\r\n        };\r\n      }\r\n      case REMOVE_FOLLOWER_REQUEST: {\r\n        return {\r\n          ...state,\r\n        };\r\n      }\r\n      case REMOVE_FOLLOWER_SUCCESS: {\r\n        return {\r\n          ...state,\r\n          me: {\r\n            ...state.me,\r\n            Followers: state.me.Followers.filter(v => v.id !== action.data),\r\n          },\r\n          followerList: state.followerList.filter(v => v.id !== action.data),\r\n        };\r\n      }\r\n      case REMOVE_FOLLOWER_FAILURE: {\r\n        return {\r\n          ...state,\r\n        };\r\n      }\r\n      case EDIT_NICKNAME_REQUEST: {\r\n        return {\r\n          ...state,\r\n          isEditingNickname: true,\r\n          editNicknameErrorReason: '',\r\n        };\r\n      }\r\n      case EDIT_NICKNAME_SUCCESS: {\r\n        return {\r\n          ...state,\r\n          isEditingNickname: false,\r\n          me: {\r\n            ...state.me,\r\n            nickname: action.data,\r\n          },\r\n        };\r\n      }\r\n      case EDIT_NICKNAME_FAILURE: {\r\n        return {\r\n          ...state,\r\n          isEditingNickname: false,\r\n          editNicknameErrorReason: action.error,\r\n        };\r\n      }\r\n      default: {\r\n        return {\r\n          ...state,\r\n        };\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}