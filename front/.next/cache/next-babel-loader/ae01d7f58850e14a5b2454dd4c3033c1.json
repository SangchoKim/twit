{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(login),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchLogin),\n    _marked3 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(signUp),\n    _marked4 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchSignUp),\n    _marked5 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(logOut),\n    _marked6 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchLogOut),\n    _marked7 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(loadUser),\n    _marked8 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchLoadUser),\n    _marked9 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(follow),\n    _marked10 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchFollow),\n    _marked11 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(unfollow),\n    _marked12 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchUnfollow),\n    _marked13 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(loadFollowers),\n    _marked14 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchLoadFollowers),\n    _marked15 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(loadFollowings),\n    _marked16 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchLoadFollowings),\n    _marked17 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(removeFollower),\n    _marked18 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchRemoveFollower),\n    _marked19 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(userSaga);\n\nimport { all, fork, takeLatest, call, put, delay } from 'redux-saga/effects';\nimport { LOAD_USER_FAILURE, LOAD_USER_REQUEST, LOAD_USER_SUCCESS, LOG_IN_FAILURE, LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_OUT_FAILURE, LOG_OUT_REQUEST, LOG_OUT_SUCCESS, SIGN_UP_FAILURE, SIGN_UP_REQUEST, SIGN_UP_SUCCESS, UNFOLLOW_USER_FAILURE, UNFOLLOW_USER_REQUEST, UNFOLLOW_USER_SUCCESS, FOLLOW_USER_FAILURE, FOLLOW_USER_REQUEST, FOLLOW_USER_SUCCESS, LOAD_FOLLOWERS_FAILURE, LOAD_FOLLOWERS_REQUEST, LOAD_FOLLOWERS_SUCCESS, LOAD_FOLLOWINGS_FAILURE, LOAD_FOLLOWINGS_REQUEST, LOAD_FOLLOWINGS_SUCCESS, REMOVE_FOLLOWER_FAILURE, REMOVE_FOLLOWER_REQUEST, REMOVE_FOLLOWER_SUCCESS } from '../reducers/user';\nimport axios from 'axios';\n\nfunction loginAPI(loginData) {\n  // 서버에 요청을 보내는 부분 \n  return axios.post('/user/login', loginData, {\n    withCredentials: true // 쿠기를 다른 도메인으로 보낼때 ->도메인이 다르기떄문에 설정 필요 (front)\n\n  });\n}\n\nfunction login(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function login$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return call(loginAPI, action.data);\n\n        case 3:\n          result = _context.sent;\n          console.log(result);\n          _context.next = 7;\n          return put({\n            // put은 dispatch 동일\n            type: LOG_IN_SUCCESS,\n            data: result.data\n          });\n\n        case 7:\n          _context.next = 14;\n          break;\n\n        case 9:\n          _context.prev = 9;\n          _context.t0 = _context[\"catch\"](0);\n          // loginAPI 실패\n          console.log(_context.t0);\n          _context.next = 14;\n          return put({\n            type: LOG_IN_FAILURE\n          });\n\n        case 14:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 9]]);\n}\n\nfunction watchLogin() {\n  return _regeneratorRuntime.wrap(function watchLogin$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeLatest(LOG_IN_REQUEST, login);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}\n\nfunction signUpAPI(signUPdata) {\n  // 서버에 요청을 보내는 부분 \n  return axios.post('/user/', signUPdata);\n}\n\nfunction signUp(action) {\n  return _regeneratorRuntime.wrap(function signUp$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return call(signUpAPI, action.data);\n\n        case 3:\n          _context3.next = 5;\n          return put({\n            // put은 dispatch 동일\n            type: SIGN_UP_SUCCESS\n          });\n\n        case 5:\n          _context3.next = 12;\n          break;\n\n        case 7:\n          _context3.prev = 7;\n          _context3.t0 = _context3[\"catch\"](0);\n          // loginAPI 실패\n          console.log(_context3.t0);\n          _context3.next = 12;\n          return put({\n            type: SIGN_UP_FAILURE\n          });\n\n        case 12:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[0, 7]]);\n}\n\nfunction watchSignUp() {\n  return _regeneratorRuntime.wrap(function watchSignUp$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return takeLatest(SIGN_UP_REQUEST, signUp);\n\n        case 2:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4);\n}\n\nfunction logOutAPI() {\n  // 서버에 요청을 보내는 부분\n  return axios.post('/user/logout', {}, {\n    withCredentials: true\n  });\n}\n\nfunction logOut() {\n  return _regeneratorRuntime.wrap(function logOut$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.prev = 0;\n          _context5.next = 3;\n          return call(logOutAPI);\n\n        case 3:\n          _context5.next = 5;\n          return put({\n            // put은 dispatch 동일\n            type: LOG_OUT_SUCCESS\n          });\n\n        case 5:\n          _context5.next = 12;\n          break;\n\n        case 7:\n          _context5.prev = 7;\n          _context5.t0 = _context5[\"catch\"](0);\n          // loginAPI 실패\n          console.error(_context5.t0);\n          _context5.next = 12;\n          return put({\n            type: LOG_OUT_FAILURE,\n            error: _context5.t0\n          });\n\n        case 12:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5, null, [[0, 7]]);\n}\n\nfunction watchLogOut() {\n  return _regeneratorRuntime.wrap(function watchLogOut$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.next = 2;\n          return takeLatest(LOG_OUT_REQUEST, logOut);\n\n        case 2:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6);\n}\n\nfunction loadUserAPI(userId) {\n  // 서버에 요청을 보내는 부분\n  return axios.get(userId ? \"/user/\".concat(userId) : '/user/', {\n    withCredentials: true\n  });\n}\n\nfunction loadUser(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function loadUser$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.prev = 0;\n          _context7.next = 3;\n          return call(loadUserAPI, action.data);\n\n        case 3:\n          result = _context7.sent;\n          _context7.next = 6;\n          return put({\n            // put은 dispatch 동일\n            type: LOAD_USER_SUCCESS,\n            data: result.data,\n            me: !action.data\n          });\n\n        case 6:\n          _context7.next = 13;\n          break;\n\n        case 8:\n          _context7.prev = 8;\n          _context7.t0 = _context7[\"catch\"](0);\n          // loginAPI 실패\n          console.error(_context7.t0);\n          _context7.next = 13;\n          return put({\n            type: LOAD_USER_FAILURE,\n            error: _context7.t0\n          });\n\n        case 13:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked7, null, [[0, 8]]);\n}\n\nfunction watchLoadUser() {\n  return _regeneratorRuntime.wrap(function watchLoadUser$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          _context8.next = 2;\n          return takeLatest(LOAD_USER_REQUEST, loadUser);\n\n        case 2:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, _marked8);\n}\n\nfunction followAPI(userId) {\n  // 서버에 요청을 보내는 부분\n  return axios.post(\"/user/\".concat(userId, \"/follow\"), {}, {\n    withCredentials: true\n  });\n}\n\nfunction follow(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function follow$(_context9) {\n    while (1) {\n      switch (_context9.prev = _context9.next) {\n        case 0:\n          _context9.prev = 0;\n          _context9.next = 3;\n          return call(followAPI, action.data);\n\n        case 3:\n          result = _context9.sent;\n          _context9.next = 6;\n          return put({\n            // put은 dispatch 동일\n            type: FOLLOW_USER_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context9.next = 13;\n          break;\n\n        case 8:\n          _context9.prev = 8;\n          _context9.t0 = _context9[\"catch\"](0);\n          // loginAPI 실패\n          console.error(_context9.t0);\n          _context9.next = 13;\n          return put({\n            type: FOLLOW_USER_FAILURE,\n            error: _context9.t0\n          });\n\n        case 13:\n        case \"end\":\n          return _context9.stop();\n      }\n    }\n  }, _marked9, null, [[0, 8]]);\n}\n\nfunction watchFollow() {\n  return _regeneratorRuntime.wrap(function watchFollow$(_context10) {\n    while (1) {\n      switch (_context10.prev = _context10.next) {\n        case 0:\n          _context10.next = 2;\n          return takeLatest(FOLLOW_USER_REQUEST, follow);\n\n        case 2:\n        case \"end\":\n          return _context10.stop();\n      }\n    }\n  }, _marked10);\n}\n\nfunction unfollowAPI(userId) {\n  // 서버에 요청을 보내는 부분\n  return axios[\"delete\"](\"/user/\".concat(userId, \"/follow\"), {\n    withCredentials: true\n  });\n}\n\nfunction unfollow(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function unfollow$(_context11) {\n    while (1) {\n      switch (_context11.prev = _context11.next) {\n        case 0:\n          _context11.prev = 0;\n          _context11.next = 3;\n          return call(unfollowAPI, action.data);\n\n        case 3:\n          result = _context11.sent;\n          _context11.next = 6;\n          return put({\n            // put은 dispatch 동일\n            type: UNFOLLOW_USER_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context11.next = 13;\n          break;\n\n        case 8:\n          _context11.prev = 8;\n          _context11.t0 = _context11[\"catch\"](0);\n          // loginAPI 실패\n          console.error(_context11.t0);\n          _context11.next = 13;\n          return put({\n            type: UNFOLLOW_USER_FAILURE,\n            error: _context11.t0\n          });\n\n        case 13:\n        case \"end\":\n          return _context11.stop();\n      }\n    }\n  }, _marked11, null, [[0, 8]]);\n}\n\nfunction watchUnfollow() {\n  return _regeneratorRuntime.wrap(function watchUnfollow$(_context12) {\n    while (1) {\n      switch (_context12.prev = _context12.next) {\n        case 0:\n          _context12.next = 2;\n          return takeLatest(UNFOLLOW_USER_REQUEST, unfollow);\n\n        case 2:\n        case \"end\":\n          return _context12.stop();\n      }\n    }\n  }, _marked12);\n}\n\nfunction loadFollowersAPI(userId) {\n  // 서버에 요청을 보내는 부분\n  return axios.get(\"/user/\".concat(userId, \"/followers\"), {\n    withCredentials: true\n  });\n}\n\nfunction loadFollowers(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function loadFollowers$(_context13) {\n    while (1) {\n      switch (_context13.prev = _context13.next) {\n        case 0:\n          _context13.prev = 0;\n          _context13.next = 3;\n          return call(loadFollowersAPI, action.data);\n\n        case 3:\n          result = _context13.sent;\n          _context13.next = 6;\n          return put({\n            // put은 dispatch 동일\n            type: LOAD_FOLLOWERS_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context13.next = 13;\n          break;\n\n        case 8:\n          _context13.prev = 8;\n          _context13.t0 = _context13[\"catch\"](0);\n          // loginAPI 실패\n          console.error(_context13.t0);\n          _context13.next = 13;\n          return put({\n            type: LOAD_FOLLOWERS_FAILURE,\n            error: _context13.t0\n          });\n\n        case 13:\n        case \"end\":\n          return _context13.stop();\n      }\n    }\n  }, _marked13, null, [[0, 8]]);\n}\n\nfunction watchLoadFollowers() {\n  return _regeneratorRuntime.wrap(function watchLoadFollowers$(_context14) {\n    while (1) {\n      switch (_context14.prev = _context14.next) {\n        case 0:\n          _context14.next = 2;\n          return takeEvery(LOAD_FOLLOWERS_REQUEST, loadFollowers);\n\n        case 2:\n        case \"end\":\n          return _context14.stop();\n      }\n    }\n  }, _marked14);\n}\n\nfunction loadFollowingsAPI(userId) {\n  // 서버에 요청을 보내는 부분\n  return axios.get(\"/user/\".concat(userId, \"/followings\"), {\n    withCredentials: true\n  });\n}\n\nfunction loadFollowings(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function loadFollowings$(_context15) {\n    while (1) {\n      switch (_context15.prev = _context15.next) {\n        case 0:\n          _context15.prev = 0;\n          _context15.next = 3;\n          return call(loadFollowingsAPI, action.data);\n\n        case 3:\n          result = _context15.sent;\n          _context15.next = 6;\n          return put({\n            // put은 dispatch 동일\n            type: LOAD_FOLLOWINGS_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context15.next = 13;\n          break;\n\n        case 8:\n          _context15.prev = 8;\n          _context15.t0 = _context15[\"catch\"](0);\n          // loginAPI 실패\n          console.error(_context15.t0);\n          _context15.next = 13;\n          return put({\n            type: LOAD_FOLLOWINGS_FAILURE,\n            error: _context15.t0\n          });\n\n        case 13:\n        case \"end\":\n          return _context15.stop();\n      }\n    }\n  }, _marked15, null, [[0, 8]]);\n}\n\nfunction watchLoadFollowings() {\n  return _regeneratorRuntime.wrap(function watchLoadFollowings$(_context16) {\n    while (1) {\n      switch (_context16.prev = _context16.next) {\n        case 0:\n          _context16.next = 2;\n          return takeEvery(LOAD_FOLLOWINGS_REQUEST, loadFollowings);\n\n        case 2:\n        case \"end\":\n          return _context16.stop();\n      }\n    }\n  }, _marked16);\n}\n\nfunction removeFollowerAPI(userId) {\n  // 서버에 요청을 보내는 부분\n  return axios[\"delete\"](\"/user/\".concat(userId, \"/follower\"), {\n    withCredentials: true\n  });\n}\n\nfunction removeFollower(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function removeFollower$(_context17) {\n    while (1) {\n      switch (_context17.prev = _context17.next) {\n        case 0:\n          _context17.prev = 0;\n          _context17.next = 3;\n          return call(removeFollowerAPI, action.data);\n\n        case 3:\n          result = _context17.sent;\n          _context17.next = 6;\n          return put({\n            // put은 dispatch 동일\n            type: REMOVE_FOLLOWER_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context17.next = 13;\n          break;\n\n        case 8:\n          _context17.prev = 8;\n          _context17.t0 = _context17[\"catch\"](0);\n          // loginAPI 실패\n          console.error(_context17.t0);\n          _context17.next = 13;\n          return put({\n            type: REMOVE_FOLLOWER_FAILURE,\n            error: _context17.t0\n          });\n\n        case 13:\n        case \"end\":\n          return _context17.stop();\n      }\n    }\n  }, _marked17, null, [[0, 8]]);\n}\n\nfunction watchRemoveFollower() {\n  return _regeneratorRuntime.wrap(function watchRemoveFollower$(_context18) {\n    while (1) {\n      switch (_context18.prev = _context18.next) {\n        case 0:\n          _context18.next = 2;\n          return takeEvery(REMOVE_FOLLOWER_REQUEST, removeFollower);\n\n        case 2:\n        case \"end\":\n          return _context18.stop();\n      }\n    }\n  }, _marked18);\n}\n\nexport default function userSaga() {\n  return _regeneratorRuntime.wrap(function userSaga$(_context19) {\n    while (1) {\n      switch (_context19.prev = _context19.next) {\n        case 0:\n          _context19.next = 2;\n          return all([fork(watchLogin), fork(watchLogOut), fork(watchLoadUser), fork(watchSignUp), fork(watchFollow), fork(watchUnfollow), fork(watchLoadFollowers), fork(watchLoadFollowings), fork(watchRemoveFollower)]);\n\n        case 2:\n        case \"end\":\n          return _context19.stop();\n      }\n    }\n  }, _marked19);\n}","map":{"version":3,"sources":["D:\\NodeBird\\front\\sagas\\user.js"],"names":["login","watchLogin","signUp","watchSignUp","logOut","watchLogOut","loadUser","watchLoadUser","follow","watchFollow","unfollow","watchUnfollow","loadFollowers","watchLoadFollowers","loadFollowings","watchLoadFollowings","removeFollower","watchRemoveFollower","userSaga","all","fork","takeLatest","call","put","delay","LOAD_USER_FAILURE","LOAD_USER_REQUEST","LOAD_USER_SUCCESS","LOG_IN_FAILURE","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_OUT_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","SIGN_UP_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","UNFOLLOW_USER_FAILURE","UNFOLLOW_USER_REQUEST","UNFOLLOW_USER_SUCCESS","FOLLOW_USER_FAILURE","FOLLOW_USER_REQUEST","FOLLOW_USER_SUCCESS","LOAD_FOLLOWERS_FAILURE","LOAD_FOLLOWERS_REQUEST","LOAD_FOLLOWERS_SUCCESS","LOAD_FOLLOWINGS_FAILURE","LOAD_FOLLOWINGS_REQUEST","LOAD_FOLLOWINGS_SUCCESS","REMOVE_FOLLOWER_FAILURE","REMOVE_FOLLOWER_REQUEST","REMOVE_FOLLOWER_SUCCESS","axios","loginAPI","loginData","post","withCredentials","action","data","result","console","log","type","signUpAPI","signUPdata","logOutAPI","error","loadUserAPI","userId","get","me","followAPI","unfollowAPI","loadFollowersAPI","takeEvery","loadFollowingsAPI","removeFollowerAPI"],"mappings":";;;;yBAuCUA,K;;;yBAiBAC,U;;;yBASAC,M;;;yBAcAC,W;;;yBAWEC,M;;;yBAgBAC,W;;;yBAWAC,Q;;;yBAkBAC,a;;;yBAWAC,M;;;yBAiBAC,W;;;yBAWAC,Q;;;yBAiBAC,a;;;yBAUAC,a;;;yBAiBAC,kB;;;yBAWAC,c;;;yBAiBAC,mB;;;yBAWAC,c;;;yBAiBAC,mB;;;yBAIaC,Q;;AAtRzB,SAAQC,GAAR,EAAaC,IAAb,EAAmBC,UAAnB,EAA+BC,IAA/B,EAAqCC,GAArC,EAA0CC,KAA1C,QAAsD,oBAAtD;AACA,SACIC,iBADJ,EAEIC,iBAFJ,EAGIC,iBAHJ,EAIIC,cAJJ,EAKIC,cALJ,EAMIC,cANJ,EAOIC,eAPJ,EAQIC,eARJ,EASIC,eATJ,EAUIC,eAVJ,EAWIC,eAXJ,EAYIC,eAZJ,EAaIC,qBAbJ,EAcIC,qBAdJ,EAeIC,qBAfJ,EAgBIC,mBAhBJ,EAiBIC,mBAjBJ,EAkBIC,mBAlBJ,EAmBIC,sBAnBJ,EAoBIC,sBApBJ,EAqBIC,sBArBJ,EAsBIC,uBAtBJ,EAuBIC,uBAvBJ,EAwBIC,uBAxBJ,EAyBIC,uBAzBJ,EA0BIC,uBA1BJ,EA2BIC,uBA3BJ,QA4BS,kBA5BT;AA6BE,OAAOC,KAAP,MAAkB,OAAlB;;AAEF,SAASC,QAAT,CAAkBC,SAAlB,EAA4B;AACxB;AACA,SAAOF,KAAK,CAACG,IAAN,CAAW,aAAX,EAAyBD,SAAzB,EAAmC;AACtCE,IAAAA,eAAe,EAAE,IADqB,CACf;;AADe,GAAnC,CAAP;AAGH;;AAED,SAAUxD,KAAV,CAAgByD,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEuB,iBAAMnC,IAAI,CAAC+B,QAAD,EAAWI,MAAM,CAACC,IAAlB,CAAV;;AAFvB;AAEcC,UAAAA,MAFd;AAGQC,UAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AAHR;AAIQ,iBAAMpC,GAAG,CAAC;AAAE;AACRuC,YAAAA,IAAI,EAAEhC,cADA;AAEN4B,YAAAA,IAAI,EAAEC,MAAM,CAACD;AAFP,WAAD,CAAT;;AAJR;AAAA;AAAA;;AAAA;AAAA;AAAA;AAQsB;AACdE,UAAAA,OAAO,CAACC,GAAR;AATR;AAUQ,iBAAMtC,GAAG,CAAC;AACNuC,YAAAA,IAAI,EAAElC;AADA,WAAD,CAAT;;AAVR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAiBA,SAAU3B,UAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACI,iBAAMoB,UAAU,CAACQ,cAAD,EAAiB7B,KAAjB,CAAhB;;AADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIA,SAAS+D,SAAT,CAAmBC,UAAnB,EAA8B;AAC1B;AACA,SAAOZ,KAAK,CAACG,IAAN,CAAW,QAAX,EAAoBS,UAApB,CAAP;AACH;;AAED,SAAU9D,MAAV,CAAiBuD,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEQ,iBAAMnC,IAAI,CAACyC,SAAD,EAAYN,MAAM,CAACC,IAAnB,CAAV;;AAFR;AAAA;AAGQ,iBAAMnC,GAAG,CAAC;AAAE;AACRuC,YAAAA,IAAI,EAAE1B;AADA,WAAD,CAAT;;AAHR;AAAA;AAAA;;AAAA;AAAA;AAAA;AAMsB;AACdwB,UAAAA,OAAO,CAACC,GAAR;AAPR;AAQQ,iBAAMtC,GAAG,CAAC;AACNuC,YAAAA,IAAI,EAAE5B;AADA,WAAD,CAAT;;AARR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAcA,SAAU/B,WAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACI,iBAAMkB,UAAU,CAACc,eAAD,EAAkBjC,MAAlB,CAAhB;;AADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIA,SAAS+D,SAAT,GAAqB;AACjB;AACA,SAAOb,KAAK,CAACG,IAAN,CAAW,cAAX,EAA2B,EAA3B,EAA+B;AACpCC,IAAAA,eAAe,EAAE;AADmB,GAA/B,CAAP;AAGD;;AAED,SAAUpD,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGI,iBAAMkB,IAAI,CAAC2C,SAAD,CAAV;;AAHJ;AAAA;AAII,iBAAM1C,GAAG,CAAC;AAAE;AACVuC,YAAAA,IAAI,EAAE7B;AADE,WAAD,CAAT;;AAJJ;AAAA;AAAA;;AAAA;AAAA;AAAA;AAOgB;AACZ2B,UAAAA,OAAO,CAACM,KAAR;AARJ;AASI,iBAAM3C,GAAG,CAAC;AACRuC,YAAAA,IAAI,EAAE/B,eADE;AAERmC,YAAAA,KAAK;AAFG,WAAD,CAAT;;AATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAgBA,SAAU7D,WAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,iBAAMgB,UAAU,CAACW,eAAD,EAAkB5B,MAAlB,CAAhB;;AADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIA,SAAS+D,WAAT,CAAqBC,MAArB,EAA6B;AAC3B;AACA,SAAOhB,KAAK,CAACiB,GAAN,CAAUD,MAAM,mBAAYA,MAAZ,IAAuB,QAAvC,EAAiD;AACtDZ,IAAAA,eAAe,EAAE;AADqC,GAAjD,CAAP;AAGD;;AAED,SAAUlD,QAAV,CAAmBmD,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGmB,iBAAMnC,IAAI,CAAC6C,WAAD,EAAcV,MAAM,CAACC,IAArB,CAAV;;AAHnB;AAGUC,UAAAA,MAHV;AAAA;AAII,iBAAMpC,GAAG,CAAC;AAAE;AACVuC,YAAAA,IAAI,EAAEnC,iBADE;AAER+B,YAAAA,IAAI,EAAEC,MAAM,CAACD,IAFL;AAGRY,YAAAA,EAAE,EAAE,CAACb,MAAM,CAACC;AAHJ,WAAD,CAAT;;AAJJ;AAAA;AAAA;;AAAA;AAAA;AAAA;AASgB;AACZE,UAAAA,OAAO,CAACM,KAAR;AAVJ;AAWI,iBAAM3C,GAAG,CAAC;AACRuC,YAAAA,IAAI,EAAErC,iBADE;AAERyC,YAAAA,KAAK;AAFG,WAAD,CAAT;;AAXJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAkBA,SAAU3D,aAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,iBAAMc,UAAU,CAACK,iBAAD,EAAoBpB,QAApB,CAAhB;;AADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIA,SAASiE,SAAT,CAAmBH,MAAnB,EAA2B;AACzB;AACA,SAAOhB,KAAK,CAACG,IAAN,iBAAoBa,MAApB,cAAqC,EAArC,EAAyC;AAC9CZ,IAAAA,eAAe,EAAE;AAD6B,GAAzC,CAAP;AAGD;;AAED,SAAUhD,MAAV,CAAiBiD,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGmB,iBAAMnC,IAAI,CAACiD,SAAD,EAAYd,MAAM,CAACC,IAAnB,CAAV;;AAHnB;AAGUC,UAAAA,MAHV;AAAA;AAII,iBAAMpC,GAAG,CAAC;AAAE;AACVuC,YAAAA,IAAI,EAAEpB,mBADE;AAERgB,YAAAA,IAAI,EAAEC,MAAM,CAACD;AAFL,WAAD,CAAT;;AAJJ;AAAA;AAAA;;AAAA;AAAA;AAAA;AAQgB;AACZE,UAAAA,OAAO,CAACM,KAAR;AATJ;AAUI,iBAAM3C,GAAG,CAAC;AACRuC,YAAAA,IAAI,EAAEtB,mBADE;AAER0B,YAAAA,KAAK;AAFG,WAAD,CAAT;;AAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAiBA,SAAUzD,WAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,iBAAMY,UAAU,CAACoB,mBAAD,EAAsBjC,MAAtB,CAAhB;;AADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIA,SAASgE,WAAT,CAAqBJ,MAArB,EAA6B;AAC3B;AACA,SAAOhB,KAAK,UAAL,iBAAsBgB,MAAtB,cAAuC;AAC5CZ,IAAAA,eAAe,EAAE;AAD2B,GAAvC,CAAP;AAGD;;AAED,SAAU9C,QAAV,CAAmB+C,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGmB,iBAAMnC,IAAI,CAACkD,WAAD,EAAcf,MAAM,CAACC,IAArB,CAAV;;AAHnB;AAGUC,UAAAA,MAHV;AAAA;AAII,iBAAMpC,GAAG,CAAC;AAAE;AACVuC,YAAAA,IAAI,EAAEvB,qBADE;AAERmB,YAAAA,IAAI,EAAEC,MAAM,CAACD;AAFL,WAAD,CAAT;;AAJJ;AAAA;AAAA;;AAAA;AAAA;AAAA;AAQgB;AACZE,UAAAA,OAAO,CAACM,KAAR;AATJ;AAUI,iBAAM3C,GAAG,CAAC;AACRuC,YAAAA,IAAI,EAAEzB,qBADE;AAER6B,YAAAA,KAAK;AAFG,WAAD,CAAT;;AAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAiBA,SAAUvD,aAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,iBAAMU,UAAU,CAACiB,qBAAD,EAAwB5B,QAAxB,CAAhB;;AADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAGA,SAAS+D,gBAAT,CAA0BL,MAA1B,EAAkC;AAChC;AACA,SAAOhB,KAAK,CAACiB,GAAN,iBAAmBD,MAAnB,iBAAuC;AAC5CZ,IAAAA,eAAe,EAAE;AAD2B,GAAvC,CAAP;AAGD;;AAED,SAAU5C,aAAV,CAAwB6C,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGmB,iBAAMnC,IAAI,CAACmD,gBAAD,EAAmBhB,MAAM,CAACC,IAA1B,CAAV;;AAHnB;AAGUC,UAAAA,MAHV;AAAA;AAII,iBAAMpC,GAAG,CAAC;AAAE;AACVuC,YAAAA,IAAI,EAAEjB,sBADE;AAERa,YAAAA,IAAI,EAAEC,MAAM,CAACD;AAFL,WAAD,CAAT;;AAJJ;AAAA;AAAA;;AAAA;AAAA;AAAA;AAQgB;AACZE,UAAAA,OAAO,CAACM,KAAR;AATJ;AAUI,iBAAM3C,GAAG,CAAC;AACRuC,YAAAA,IAAI,EAAEnB,sBADE;AAERuB,YAAAA,KAAK;AAFG,WAAD,CAAT;;AAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAiBA,SAAUrD,kBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,iBAAM6D,SAAS,CAAC9B,sBAAD,EAAyBhC,aAAzB,CAAf;;AADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIA,SAAS+D,iBAAT,CAA2BP,MAA3B,EAAmC;AACjC;AACA,SAAOhB,KAAK,CAACiB,GAAN,iBAAmBD,MAAnB,kBAAwC;AAC7CZ,IAAAA,eAAe,EAAE;AAD4B,GAAxC,CAAP;AAGD;;AAED,SAAU1C,cAAV,CAAyB2C,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGmB,iBAAMnC,IAAI,CAACqD,iBAAD,EAAoBlB,MAAM,CAACC,IAA3B,CAAV;;AAHnB;AAGUC,UAAAA,MAHV;AAAA;AAII,iBAAMpC,GAAG,CAAC;AAAE;AACVuC,YAAAA,IAAI,EAAEd,uBADE;AAERU,YAAAA,IAAI,EAAEC,MAAM,CAACD;AAFL,WAAD,CAAT;;AAJJ;AAAA;AAAA;;AAAA;AAAA;AAAA;AAQgB;AACZE,UAAAA,OAAO,CAACM,KAAR;AATJ;AAUI,iBAAM3C,GAAG,CAAC;AACRuC,YAAAA,IAAI,EAAEhB,uBADE;AAERoB,YAAAA,KAAK;AAFG,WAAD,CAAT;;AAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAiBA,SAAUnD,mBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,iBAAM2D,SAAS,CAAC3B,uBAAD,EAA0BjC,cAA1B,CAAf;;AADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIA,SAAS8D,iBAAT,CAA2BR,MAA3B,EAAmC;AACjC;AACA,SAAOhB,KAAK,UAAL,iBAAsBgB,MAAtB,gBAAyC;AAC9CZ,IAAAA,eAAe,EAAE;AAD6B,GAAzC,CAAP;AAGD;;AAED,SAAUxC,cAAV,CAAyByC,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGmB,iBAAMnC,IAAI,CAACsD,iBAAD,EAAoBnB,MAAM,CAACC,IAA3B,CAAV;;AAHnB;AAGUC,UAAAA,MAHV;AAAA;AAII,iBAAMpC,GAAG,CAAC;AAAE;AACVuC,YAAAA,IAAI,EAAEX,uBADE;AAERO,YAAAA,IAAI,EAAEC,MAAM,CAACD;AAFL,WAAD,CAAT;;AAJJ;AAAA;AAAA;;AAAA;AAAA;AAAA;AAQgB;AACZE,UAAAA,OAAO,CAACM,KAAR;AATJ;AAUI,iBAAM3C,GAAG,CAAC;AACRuC,YAAAA,IAAI,EAAEb,uBADE;AAERiB,YAAAA,KAAK;AAFG,WAAD,CAAT;;AAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAiBA,SAAUjD,mBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,iBAAMyD,SAAS,CAACxB,uBAAD,EAA0BlC,cAA1B,CAAf;;AADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIF,eAAe,SAAUE,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACX,iBAAMC,GAAG,CAAC,CACNC,IAAI,CAACnB,UAAD,CADE,EAENmB,IAAI,CAACf,WAAD,CAFE,EAGNe,IAAI,CAACb,aAAD,CAHE,EAINa,IAAI,CAACjB,WAAD,CAJE,EAKNiB,IAAI,CAACX,WAAD,CALE,EAMNW,IAAI,CAACT,aAAD,CANE,EAONS,IAAI,CAACP,kBAAD,CAPE,EAQNO,IAAI,CAACL,mBAAD,CARE,EASNK,IAAI,CAACH,mBAAD,CATE,CAAD,CAAT;;AADW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import {all, fork, takeLatest, call, put, delay} from 'redux-saga/effects'\r\nimport {\r\n    LOAD_USER_FAILURE,\r\n    LOAD_USER_REQUEST,\r\n    LOAD_USER_SUCCESS,\r\n    LOG_IN_FAILURE,\r\n    LOG_IN_REQUEST,\r\n    LOG_IN_SUCCESS,\r\n    LOG_OUT_FAILURE,\r\n    LOG_OUT_REQUEST,\r\n    LOG_OUT_SUCCESS,\r\n    SIGN_UP_FAILURE,\r\n    SIGN_UP_REQUEST,\r\n    SIGN_UP_SUCCESS,\r\n    UNFOLLOW_USER_FAILURE,\r\n    UNFOLLOW_USER_REQUEST,\r\n    UNFOLLOW_USER_SUCCESS,\r\n    FOLLOW_USER_FAILURE,\r\n    FOLLOW_USER_REQUEST,\r\n    FOLLOW_USER_SUCCESS,\r\n    LOAD_FOLLOWERS_FAILURE,\r\n    LOAD_FOLLOWERS_REQUEST,\r\n    LOAD_FOLLOWERS_SUCCESS,\r\n    LOAD_FOLLOWINGS_FAILURE, \r\n    LOAD_FOLLOWINGS_REQUEST,\r\n    LOAD_FOLLOWINGS_SUCCESS,\r\n    REMOVE_FOLLOWER_FAILURE, \r\n    REMOVE_FOLLOWER_REQUEST, \r\n    REMOVE_FOLLOWER_SUCCESS,\r\n  } from '../reducers/user';\r\n  import axios from 'axios';\r\n\r\nfunction loginAPI(loginData){\r\n    // 서버에 요청을 보내는 부분 \r\n    return axios.post('/user/login',loginData,{\r\n        withCredentials: true, // 쿠기를 다른 도메인으로 보낼때 ->도메인이 다르기떄문에 설정 필요 (front)\r\n    });\r\n}\r\n\r\nfunction* login(action){\r\n    try {\r\n        const result = yield call(loginAPI, action.data);\r\n        console.log(result);\r\n        yield put({ // put은 dispatch 동일\r\n            type: LOG_IN_SUCCESS,\r\n            data: result.data,\r\n        });\r\n    } catch (error) { // loginAPI 실패\r\n        console.log(error);\r\n        yield put({\r\n            type: LOG_IN_FAILURE\r\n        });\r\n    }\r\n}\r\n\r\n\r\nfunction* watchLogin(){\r\n    yield takeLatest(LOG_IN_REQUEST, login)\r\n}\r\n\r\nfunction signUpAPI(signUPdata){\r\n    // 서버에 요청을 보내는 부분 \r\n    return axios.post('/user/',signUPdata);\r\n}\r\n\r\nfunction* signUp(action){\r\n    try {\r\n        yield call(signUpAPI, action.data);\r\n        yield put({ // put은 dispatch 동일\r\n            type: SIGN_UP_SUCCESS\r\n        });\r\n    } catch (error) { // loginAPI 실패\r\n        console.log(error);\r\n        yield put({\r\n            type: SIGN_UP_FAILURE\r\n        });\r\n    }\r\n}\r\n\r\nfunction* watchSignUp(){\r\n    yield takeLatest(SIGN_UP_REQUEST, signUp)\r\n}\r\n\r\nfunction logOutAPI() {\r\n    // 서버에 요청을 보내는 부분\r\n    return axios.post('/user/logout', {}, {\r\n      withCredentials: true,\r\n    });\r\n  }\r\n  \r\n  function* logOut() {\r\n    try {\r\n      // yield call(logOutAPI);\r\n      yield call(logOutAPI);\r\n      yield put({ // put은 dispatch 동일\r\n        type: LOG_OUT_SUCCESS,\r\n      });\r\n    } catch (e) { // loginAPI 실패\r\n      console.error(e);\r\n      yield put({\r\n        type: LOG_OUT_FAILURE,\r\n        error: e,\r\n      });\r\n    }\r\n  }\r\n  \r\n  function* watchLogOut() {\r\n    yield takeLatest(LOG_OUT_REQUEST, logOut);\r\n  }\r\n  \r\n  function loadUserAPI(userId) {\r\n    // 서버에 요청을 보내는 부분\r\n    return axios.get(userId ? `/user/${userId}` : '/user/', {\r\n      withCredentials: true,\r\n    });\r\n  }\r\n  \r\n  function* loadUser(action) {\r\n    try {\r\n      // yield call(loadUserAPI);\r\n      const result = yield call(loadUserAPI, action.data);\r\n      yield put({ // put은 dispatch 동일\r\n        type: LOAD_USER_SUCCESS,\r\n        data: result.data,\r\n        me: !action.data,\r\n      });\r\n    } catch (e) { // loginAPI 실패\r\n      console.error(e);\r\n      yield put({\r\n        type: LOAD_USER_FAILURE,\r\n        error: e,\r\n      });\r\n    }\r\n  }\r\n  \r\n  function* watchLoadUser() {\r\n    yield takeLatest(LOAD_USER_REQUEST, loadUser);\r\n  }\r\n\r\n  function followAPI(userId) {\r\n    // 서버에 요청을 보내는 부분\r\n    return axios.post(`/user/${userId}/follow`, {}, {\r\n      withCredentials: true,\r\n    });\r\n  }\r\n  \r\n  function* follow(action) {\r\n    try {\r\n      // yield call(followAPI);\r\n      const result = yield call(followAPI, action.data);\r\n      yield put({ // put은 dispatch 동일\r\n        type: FOLLOW_USER_SUCCESS,\r\n        data: result.data,\r\n      });\r\n    } catch (e) { // loginAPI 실패\r\n      console.error(e);\r\n      yield put({\r\n        type: FOLLOW_USER_FAILURE,\r\n        error: e,\r\n      });\r\n    }\r\n  }\r\n  \r\n  function* watchFollow() {\r\n    yield takeLatest(FOLLOW_USER_REQUEST, follow);\r\n  }\r\n  \r\n  function unfollowAPI(userId) {\r\n    // 서버에 요청을 보내는 부분\r\n    return axios.delete(`/user/${userId}/follow`, {\r\n      withCredentials: true,\r\n    });\r\n  }\r\n  \r\n  function* unfollow(action) {\r\n    try {\r\n      // yield call(unfollowAPI);\r\n      const result = yield call(unfollowAPI, action.data);\r\n      yield put({ // put은 dispatch 동일\r\n        type: UNFOLLOW_USER_SUCCESS,\r\n        data: result.data,\r\n      });\r\n    } catch (e) { // loginAPI 실패\r\n      console.error(e);\r\n      yield put({\r\n        type: UNFOLLOW_USER_FAILURE,\r\n        error: e,\r\n      });\r\n    }\r\n  }\r\n  \r\n  function* watchUnfollow() {\r\n    yield takeLatest(UNFOLLOW_USER_REQUEST, unfollow);\r\n  }\r\n  function loadFollowersAPI(userId) {\r\n    // 서버에 요청을 보내는 부분\r\n    return axios.get(`/user/${userId}/followers`, {\r\n      withCredentials: true,\r\n    });\r\n  }\r\n  \r\n  function* loadFollowers(action) {\r\n    try {\r\n      // yield call(loadFollowersAPI);\r\n      const result = yield call(loadFollowersAPI, action.data);\r\n      yield put({ // put은 dispatch 동일\r\n        type: LOAD_FOLLOWERS_SUCCESS,\r\n        data: result.data,\r\n      });\r\n    } catch (e) { // loginAPI 실패\r\n      console.error(e);\r\n      yield put({\r\n        type: LOAD_FOLLOWERS_FAILURE,\r\n        error: e,\r\n      });\r\n    }\r\n  }\r\n  \r\n  function* watchLoadFollowers() {\r\n    yield takeEvery(LOAD_FOLLOWERS_REQUEST, loadFollowers);\r\n  }\r\n  \r\n  function loadFollowingsAPI(userId) {\r\n    // 서버에 요청을 보내는 부분\r\n    return axios.get(`/user/${userId}/followings`, {\r\n      withCredentials: true,\r\n    });\r\n  }\r\n  \r\n  function* loadFollowings(action) {\r\n    try {\r\n      // yield call(loadFollowersAPI);\r\n      const result = yield call(loadFollowingsAPI, action.data);\r\n      yield put({ // put은 dispatch 동일\r\n        type: LOAD_FOLLOWINGS_SUCCESS,\r\n        data: result.data,\r\n      });\r\n    } catch (e) { // loginAPI 실패\r\n      console.error(e);\r\n      yield put({\r\n        type: LOAD_FOLLOWINGS_FAILURE,\r\n        error: e,\r\n      });\r\n    }\r\n  }\r\n  \r\n  function* watchLoadFollowings() {\r\n    yield takeEvery(LOAD_FOLLOWINGS_REQUEST, loadFollowings);\r\n  }\r\n  \r\n  function removeFollowerAPI(userId) {\r\n    // 서버에 요청을 보내는 부분\r\n    return axios.delete(`/user/${userId}/follower`, {\r\n      withCredentials: true,\r\n    });\r\n  }\r\n  \r\n  function* removeFollower(action) {\r\n    try {\r\n      // yield call(loadFollowersAPI);\r\n      const result = yield call(removeFollowerAPI, action.data);\r\n      yield put({ // put은 dispatch 동일\r\n        type: REMOVE_FOLLOWER_SUCCESS,\r\n        data: result.data,\r\n      });\r\n    } catch (e) { // loginAPI 실패\r\n      console.error(e);\r\n      yield put({\r\n        type: REMOVE_FOLLOWER_FAILURE,\r\n        error: e,\r\n      });\r\n    }\r\n  }\r\n  \r\n  function* watchRemoveFollower() {\r\n    yield takeEvery(REMOVE_FOLLOWER_REQUEST, removeFollower);\r\n  }\r\n\r\nexport default function* userSaga() {\r\n    yield all([\r\n        fork(watchLogin),\r\n        fork(watchLogOut),\r\n        fork(watchLoadUser),\r\n        fork(watchSignUp),\r\n        fork(watchFollow),\r\n        fork(watchUnfollow),\r\n        fork(watchLoadFollowers),\r\n        fork(watchLoadFollowings),\r\n        fork(watchRemoveFollower),\r\n    ]);\r\n}"]},"metadata":{},"sourceType":"module"}