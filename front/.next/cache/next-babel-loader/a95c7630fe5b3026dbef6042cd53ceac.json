{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useCallback, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Icon } from 'antd';\nimport ImagesZoom from './ImagesZoom';\n\nvar PostImages = function PostImages(_ref) {\n  var images = _ref.images;\n\n  var _useState = useState(false),\n      showImagesZoom = _useState[0],\n      setShowImagesZoom = _useState[1];\n\n  var onZoom = useCallback(function () {\n    setShowImagesZoom(true);\n  }, []);\n  var onClose = useCallback(function () {\n    setShowImagesZoom(false);\n  }, []);\n\n  if (images.length === 1) {\n    // 이미지가 1장일떄\n    return __jsx(React.Fragment, null, __jsx(\"img\", {\n      src: \"http://localhost:2323/\".concat(images[0].src),\n      onClick: onZoom\n    }), showImagesZoom && __jsx(ImagesZoom, {\n      images: images,\n      onClose: onClose\n    }));\n  }\n\n  if (images.length === 2) {\n    // 이미지가 2장일때\n    return __jsx(React.Fragment, null, __jsx(\"div\", null, __jsx(\"img\", {\n      src: \"http://localhost:2323/\".concat(images[0].src),\n      width: \"50%\",\n      onClick: onZoom\n    }), __jsx(\"img\", {\n      src: \"http://localhost:2323/\".concat(images[1].src),\n      width: \"50%\",\n      onClick: onZoom\n    })), showImagesZoom && __jsx(ImagesZoom, {\n      images: images,\n      onClose: onClose\n    }));\n  }\n\n  return (// 이미지가 3장이상일떄 \n    __jsx(React.Fragment, null, __jsx(\"div\", null, __jsx(\"img\", {\n      src: \"http://localhost:2323/\".concat(images[0].src),\n      width: \"50%\",\n      onClick: onZoom\n    }), __jsx(\"div\", {\n      style: {\n        display: 'inline-block',\n        width: '50%',\n        textAlign: 'center',\n        verticalAlign: 'middle'\n      },\n      onClick: onZoom\n    }, __jsx(Icon, {\n      type: \"plus\"\n    }), __jsx(\"br\", null), images.length - 1, \"\\uAC1C\\uC758 \\uC0AC\\uC9C4 \\uB354\\uBCF4\\uAE30\")), showImagesZoom && __jsx(ImagesZoom, {\n      images: images,\n      onClose: onClose\n    }))\n  );\n};\n\nPostImages.propTypes = {\n  images: PropTypes.arrayOf(PropTypes.shape({\n    // Object를 좀더 구체화해서 사용하는 것은 shape\n    src: PropTypes.string\n  })).isRequired\n};\nexport default PostImages;","map":null,"metadata":{},"sourceType":"module"}