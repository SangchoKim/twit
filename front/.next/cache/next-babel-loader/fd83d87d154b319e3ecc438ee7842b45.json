{"ast":null,"code":"import { all, fork, takeLatest, put, delay, call } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { LIKE_POST_FAILURE, LIKE_POST_REQUEST, LIKE_POST_SUCCESS, UNLIKE_POST_FAILURE, UNLIKE_POST_REQUEST, UNLIKE_POST_SUCCESS, ADD_POST_FAILURE, ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_COMMENT_FAILURE, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, LOAD_COMMENTS_FAILURE, LOAD_COMMENTS_REQUEST, LOAD_COMMENTS_SUCCESS, LOAD_MAIN_POSTS_FAILURE, LOAD_MAIN_POSTS_REQUEST, LOAD_MAIN_POSTS_SUCCESS, LOAD_HASHTAG_POSTS_FAILURE, LOAD_HASHTAG_POSTS_REQUEST, LOAD_HASHTAG_POSTS_SUCCESS, LOAD_USER_POSTS_FAILURE, LOAD_USER_POSTS_REQUEST, LOAD_USER_POSTS_SUCCESS, UPLOAD_IMAGES_FAILURE, UPLOAD_IMAGES_REQUEST, UPLOAD_IMAGES_SUCCESS, RETWEET_FAILURE, RETWEET_REQUEST, RETWEET_SUCCESS } from '../reducers/post';\n\nfunction addPostAPI(postData) {\n  return axios.post('/post', postData, {\n    withCredentials: true\n  });\n}\n\nfunction* addPost(action) {\n  console.log(\"addPost\", action.data);\n\n  try {\n    const result = yield call(addPostAPI, action.data);\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: result.data\n    });\n  } catch (e) {\n    yield put({\n      type: ADD_POST_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nfunction loadMainPostsAPI() {\n  return axios.get('/posts');\n}\n\nfunction* loadMainPosts() {\n  try {\n    const result = yield call(loadMainPostsAPI);\n    yield put({\n      type: LOAD_MAIN_POSTS_SUCCESS,\n      data: result.data\n    });\n  } catch (e) {\n    yield put({\n      type: LOAD_MAIN_POSTS_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchLoadMainPosts() {\n  yield takeLatest(LOAD_MAIN_POSTS_REQUEST, loadMainPosts);\n}\n\nfunction loadHashtagPostsAPI(tag) {\n  return axios.get(`/hashtag/${tag}`);\n}\n\nfunction* loadHashtagPosts(action) {\n  try {\n    const result = yield call(loadHashtagPostsAPI, action.data);\n    yield put({\n      type: LOAD_HASHTAG_POSTS_SUCCESS,\n      data: result.data\n    });\n  } catch (e) {\n    yield put({\n      type: LOAD_HASHTAG_POSTS_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchLoadHashtagPosts() {\n  yield takeLatest(LOAD_HASHTAG_POSTS_REQUEST, loadHashtagPosts);\n}\n\nfunction loadUserPostsAPI(id) {\n  return axios.get(`/user/${id}/posts`);\n}\n\nfunction* loadUserPosts(action) {\n  console.log(\"posts\", action.data);\n\n  try {\n    const result = yield call(loadUserPostsAPI, action.data);\n    yield put({\n      type: LOAD_USER_POSTS_SUCCESS,\n      data: result.data\n    });\n  } catch (e) {\n    yield put({\n      type: LOAD_USER_POSTS_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchLoadUserPosts() {\n  yield takeLatest(LOAD_USER_POSTS_REQUEST, loadUserPosts);\n}\n\nfunction addCommentAPI(data) {\n  return axios.post(`/post/${data.postId}/comment`, {\n    content: data.content\n  }, {\n    withCredentials: true\n  });\n}\n\nfunction* addComment(action) {\n  try {\n    const result = yield call(addCommentAPI, action.data);\n    yield put({\n      type: ADD_COMMENT_SUCCESS,\n      data: {\n        postId: action.data.postId,\n        comment: result.data\n      }\n    });\n  } catch (e) {\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\n\nfunction loadCommentsAPI(postId) {\n  return axios.get(`/post/${postId}/comments`);\n}\n\nfunction* loadComments(action) {\n  try {\n    const result = yield call(loadCommentsAPI, action.data);\n    yield put({\n      type: LOAD_COMMENTS_SUCCESS,\n      data: {\n        postId: action.data,\n        comments: result.data\n      }\n    });\n  } catch (e) {\n    console.error(e);\n    yield put({\n      type: LOAD_COMMENTS_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchLoadComments() {\n  yield takeLatest(LOAD_COMMENTS_REQUEST, loadComments);\n}\n\nfunction uploadImagesAPI(formData) {\n  return axios.post('/post/images', formData, {\n    withCredentials: true\n  });\n}\n\nfunction* uploadImages(action) {\n  try {\n    console.log(\"formData\", action.data);\n    const result = yield call(uploadImagesAPI, action.data);\n    yield put({\n      type: UPLOAD_IMAGES_SUCCESS,\n      data: result.data\n    });\n  } catch (e) {\n    console.error(e);\n    yield put({\n      type: UPLOAD_IMAGES_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchUploadImages() {\n  yield takeLatest(UPLOAD_IMAGES_REQUEST, uploadImages);\n}\n\nfunction likePostAPI(postId) {\n  return axios.post(`/post/${postId}/like`, {}, {\n    withCredentials: true\n  });\n}\n\nfunction* likePost(action) {\n  try {\n    const result = yield call(likePostAPI, action.data);\n    yield put({\n      type: LIKE_POST_SUCCESS,\n      data: {\n        postId: action.data,\n        userId: result.data.userId\n      }\n    });\n  } catch (e) {\n    console.error(e);\n    yield put({\n      type: LIKE_POST_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchLikePost() {\n  yield takeLatest(LIKE_POST_REQUEST, likePost);\n}\n\nfunction unlikePostAPI(postId) {\n  return axios.delete(`/post/${postId}/like`, {\n    withCredentials: true\n  });\n}\n\nfunction* unlikePost(action) {\n  try {\n    const result = yield call(unlikePostAPI, action.data);\n    yield put({\n      type: UNLIKE_POST_SUCCESS,\n      data: {\n        postId: action.data,\n        userId: result.data.userId\n      }\n    });\n  } catch (e) {\n    console.error(e);\n    yield put({\n      type: UNLIKE_POST_FAILURE,\n      error: e\n    });\n  }\n}\n\nfunction* watchUnlikePost() {\n  yield takeLatest(UNLIKE_POST_REQUEST, unlikePost);\n}\n\nfunction retweetAPI(postId) {\n  return axios.post(`/post/${postId}/retweet`, {}, {\n    withCredentials: true\n  });\n}\n\nfunction* retweet(action) {\n  try {\n    const result = yield call(retweetAPI, action.data);\n    yield put({\n      type: RETWEET_SUCCESS,\n      data: result.data\n    });\n  } catch (e) {\n    console.error(e);\n    yield put({\n      type: RETWEET_FAILURE,\n      error: e\n    });\n    alert(e.response && e.response.data);\n  }\n}\n\nfunction* watchRetweet() {\n  yield takeLatest(RETWEET_REQUEST, retweet);\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchLoadMainPosts), fork(watchAddPost), fork(watchAddComment), fork(watchLoadComments), fork(watchLoadHashtagPosts), fork(watchLoadUserPosts), fork(watchUploadImages), fork(watchLikePost), fork(watchUnlikePost), fork(watchRetweet)]);\n}","map":{"version":3,"sources":["D:\\NodeBird\\front\\sagas\\post.js"],"names":["all","fork","takeLatest","put","delay","call","axios","LIKE_POST_FAILURE","LIKE_POST_REQUEST","LIKE_POST_SUCCESS","UNLIKE_POST_FAILURE","UNLIKE_POST_REQUEST","UNLIKE_POST_SUCCESS","ADD_POST_FAILURE","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_COMMENT_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","LOAD_COMMENTS_FAILURE","LOAD_COMMENTS_REQUEST","LOAD_COMMENTS_SUCCESS","LOAD_MAIN_POSTS_FAILURE","LOAD_MAIN_POSTS_REQUEST","LOAD_MAIN_POSTS_SUCCESS","LOAD_HASHTAG_POSTS_FAILURE","LOAD_HASHTAG_POSTS_REQUEST","LOAD_HASHTAG_POSTS_SUCCESS","LOAD_USER_POSTS_FAILURE","LOAD_USER_POSTS_REQUEST","LOAD_USER_POSTS_SUCCESS","UPLOAD_IMAGES_FAILURE","UPLOAD_IMAGES_REQUEST","UPLOAD_IMAGES_SUCCESS","RETWEET_FAILURE","RETWEET_REQUEST","RETWEET_SUCCESS","addPostAPI","postData","post","withCredentials","addPost","action","console","log","data","result","type","e","error","watchAddPost","loadMainPostsAPI","get","loadMainPosts","watchLoadMainPosts","loadHashtagPostsAPI","tag","loadHashtagPosts","watchLoadHashtagPosts","loadUserPostsAPI","id","loadUserPosts","watchLoadUserPosts","addCommentAPI","postId","content","addComment","comment","watchAddComment","loadCommentsAPI","loadComments","comments","watchLoadComments","uploadImagesAPI","formData","uploadImages","watchUploadImages","likePostAPI","likePost","userId","watchLikePost","unlikePostAPI","delete","unlikePost","watchUnlikePost","retweetAPI","retweet","alert","response","watchRetweet","postSaga"],"mappings":"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","sourcesContent":["import { all, fork, takeLatest, put, delay, call } from 'redux-saga/effects';\r\nimport axios from 'axios';\r\nimport {\r\n  LIKE_POST_FAILURE,\r\n  LIKE_POST_REQUEST,\r\n  LIKE_POST_SUCCESS,\r\n  UNLIKE_POST_FAILURE, \r\n  UNLIKE_POST_REQUEST,\r\n  UNLIKE_POST_SUCCESS,\r\n  ADD_POST_FAILURE, \r\n  ADD_POST_REQUEST, \r\n  ADD_POST_SUCCESS,\r\n  ADD_COMMENT_FAILURE,\r\n  ADD_COMMENT_REQUEST,\r\n  ADD_COMMENT_SUCCESS,\r\n  LOAD_COMMENTS_FAILURE,\r\n  LOAD_COMMENTS_REQUEST,\r\n  LOAD_COMMENTS_SUCCESS, \r\n  LOAD_MAIN_POSTS_FAILURE, \r\n  LOAD_MAIN_POSTS_REQUEST,\r\n  LOAD_MAIN_POSTS_SUCCESS,\r\n  LOAD_HASHTAG_POSTS_FAILURE,\r\n  LOAD_HASHTAG_POSTS_REQUEST,\r\n  LOAD_HASHTAG_POSTS_SUCCESS,\r\n  LOAD_USER_POSTS_FAILURE,\r\n  LOAD_USER_POSTS_REQUEST,\r\n  LOAD_USER_POSTS_SUCCESS,\r\n  UPLOAD_IMAGES_FAILURE,\r\n  UPLOAD_IMAGES_REQUEST,\r\n  UPLOAD_IMAGES_SUCCESS,\r\n  RETWEET_FAILURE, \r\n  RETWEET_REQUEST, \r\n  RETWEET_SUCCESS,\r\n} from '../reducers/post';\r\n\r\nfunction addPostAPI(postData) {\r\n  return axios.post('/post', postData, {\r\n    withCredentials: true,\r\n  });\r\n}\r\n\r\nfunction* addPost(action) {\r\n  console.log(\"addPost\",action.data);\r\n  try {\r\n    const result = yield call(addPostAPI, action.data);\r\n    yield put({\r\n      type: ADD_POST_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (e) {\r\n    yield put({\r\n      type: ADD_POST_FAILURE,\r\n      error: e,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchAddPost() {\r\n  yield takeLatest(ADD_POST_REQUEST, addPost);\r\n}\r\n\r\nfunction loadMainPostsAPI() {\r\n  return axios.get('/posts');\r\n}\r\n\r\nfunction* loadMainPosts() {\r\n  try {\r\n    const result = yield call(loadMainPostsAPI);\r\n    yield put({\r\n      type: LOAD_MAIN_POSTS_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (e) {\r\n    yield put({\r\n      type: LOAD_MAIN_POSTS_FAILURE,\r\n      error: e,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchLoadMainPosts() {\r\n  yield takeLatest(LOAD_MAIN_POSTS_REQUEST, loadMainPosts);\r\n}\r\n\r\nfunction loadHashtagPostsAPI(tag) {\r\n  return axios.get(`/hashtag/${tag}`);\r\n}\r\n\r\nfunction* loadHashtagPosts(action) {\r\n  try {\r\n    const result = yield call(loadHashtagPostsAPI, action.data);\r\n    yield put({\r\n      type: LOAD_HASHTAG_POSTS_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (e) {\r\n    yield put({\r\n      type: LOAD_HASHTAG_POSTS_FAILURE,\r\n      error: e,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchLoadHashtagPosts() {\r\n  yield takeLatest(LOAD_HASHTAG_POSTS_REQUEST, loadHashtagPosts);\r\n}\r\n\r\nfunction loadUserPostsAPI(id) {\r\n  return axios.get(`/user/${id}/posts`);\r\n}\r\n\r\nfunction* loadUserPosts(action) {\r\n  console.log(\"posts\",action.data);\r\n  try {\r\n    const result = yield call(loadUserPostsAPI, action.data);\r\n    yield put({\r\n      type: LOAD_USER_POSTS_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (e) {\r\n    yield put({\r\n      type: LOAD_USER_POSTS_FAILURE,\r\n      error: e,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchLoadUserPosts() {\r\n  yield takeLatest(LOAD_USER_POSTS_REQUEST, loadUserPosts);\r\n}\r\n\r\nfunction addCommentAPI(data) {\r\n  return axios.post(`/post/${data.postId}/comment`, {content:data.content},\r\n    {withCredentials:true},\r\n  )\r\n}\r\n\r\nfunction* addComment(action) {\r\n  try {\r\n    const result = yield call(addCommentAPI, action.data);\r\n    yield put({\r\n      type: ADD_COMMENT_SUCCESS,\r\n      data: {\r\n        postId: action.data.postId,\r\n        comment: result.data,\r\n      },\r\n    });\r\n  } catch (e) {\r\n    yield put({\r\n      type: ADD_COMMENT_FAILURE,\r\n      error: e,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchAddComment() {\r\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\r\n}\r\n\r\nfunction loadCommentsAPI(postId) {\r\n  return axios.get(`/post/${postId}/comments`);\r\n}\r\n\r\nfunction* loadComments(action) {\r\n  try {\r\n    const result = yield call(loadCommentsAPI, action.data);\r\n    yield put({\r\n      type: LOAD_COMMENTS_SUCCESS,\r\n      data: {\r\n        postId: action.data,\r\n        comments: result.data,\r\n      },\r\n    });\r\n  } catch (e) {\r\n    console.error(e);\r\n    yield put({\r\n      type: LOAD_COMMENTS_FAILURE,\r\n      error: e,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchLoadComments() {\r\n  yield takeLatest(LOAD_COMMENTS_REQUEST, loadComments);\r\n}\r\n\r\nfunction uploadImagesAPI(formData) {\r\n  return axios.post('/post/images', formData, {\r\n    withCredentials: true,\r\n  });\r\n}\r\n\r\nfunction* uploadImages(action) {\r\n  try {\r\n    console.log(\"formData\",action.data);\r\n    const result = yield call(uploadImagesAPI, action.data);\r\n    yield put({\r\n      type: UPLOAD_IMAGES_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (e) {\r\n    console.error(e);\r\n    yield put({\r\n      type: UPLOAD_IMAGES_FAILURE,\r\n      error: e,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchUploadImages() {\r\n  yield takeLatest(UPLOAD_IMAGES_REQUEST, uploadImages);\r\n}\r\n\r\nfunction likePostAPI(postId) {\r\n  return axios.post(`/post/${postId}/like`, {}, {\r\n    withCredentials: true,\r\n  });\r\n}\r\n\r\nfunction* likePost(action) {\r\n  try {\r\n    const result = yield call(likePostAPI, action.data);\r\n    yield put({\r\n      type: LIKE_POST_SUCCESS,\r\n      data: {\r\n        postId: action.data,\r\n        userId: result.data.userId,\r\n      },\r\n    });\r\n  } catch (e) {\r\n    console.error(e);\r\n    yield put({\r\n      type: LIKE_POST_FAILURE,\r\n      error: e,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchLikePost() {\r\n  yield takeLatest(LIKE_POST_REQUEST, likePost);\r\n}\r\n\r\nfunction unlikePostAPI(postId) {\r\n  return axios.delete(`/post/${postId}/like`, {\r\n    withCredentials: true,\r\n  });\r\n}\r\n\r\nfunction* unlikePost(action) {\r\n  try {\r\n    const result = yield call(unlikePostAPI, action.data);\r\n    yield put({\r\n      type: UNLIKE_POST_SUCCESS,\r\n      data: {\r\n        postId: action.data,\r\n        userId: result.data.userId,\r\n      },\r\n    });\r\n  } catch (e) {\r\n    console.error(e);\r\n    yield put({\r\n      type: UNLIKE_POST_FAILURE,\r\n      error: e,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchUnlikePost() {\r\n  yield takeLatest(UNLIKE_POST_REQUEST, unlikePost);\r\n}\r\n\r\nfunction retweetAPI(postId) {\r\n  return axios.post(`/post/${postId}/retweet`, {}, {\r\n    withCredentials: true,\r\n  });\r\n}\r\n\r\nfunction* retweet(action) {\r\n  try {\r\n    const result = yield call(retweetAPI, action.data);\r\n    yield put({\r\n      type: RETWEET_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (e) {\r\n    console.error(e);\r\n    yield put({\r\n      type: RETWEET_FAILURE,\r\n      error: e,\r\n    });\r\n    alert(e.response && e.response.data);\r\n  }\r\n}\r\n\r\nfunction* watchRetweet() {\r\n  yield takeLatest(RETWEET_REQUEST, retweet);\r\n}\r\n\r\n\r\nexport default function* postSaga() {\r\n  yield all([\r\n    fork(watchLoadMainPosts),\r\n    fork(watchAddPost),\r\n    fork(watchAddComment),\r\n    fork(watchLoadComments),\r\n    fork(watchLoadHashtagPosts),\r\n    fork(watchLoadUserPosts),\r\n    fork(watchUploadImages),\r\n    fork(watchLikePost),\r\n    fork(watchUnlikePost),\r\n    fork(watchRetweet),\r\n  ]);\r\n}"]},"metadata":{},"sourceType":"module"}