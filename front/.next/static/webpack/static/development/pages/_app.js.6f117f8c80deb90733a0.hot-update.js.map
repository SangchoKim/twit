{"version":3,"file":"static/webpack/static\\development\\pages\\_app.js.6f117f8c80deb90733a0.hot-update.js","sources":["webpack:///./sagas/user.js"],"sourcesContent":["import {all, fork, takeLatest, call, put, delay} from 'redux-saga/effects'\r\nimport {\r\n    LOAD_USER_FAILURE,\r\n    LOAD_USER_REQUEST,\r\n    LOAD_USER_SUCCESS,\r\n    LOG_IN_FAILURE,\r\n    LOG_IN_REQUEST,\r\n    LOG_IN_SUCCESS,\r\n    LOG_OUT_FAILURE,\r\n    LOG_OUT_REQUEST,\r\n    LOG_OUT_SUCCESS,\r\n    SIGN_UP_FAILURE,\r\n    SIGN_UP_REQUEST,\r\n    SIGN_UP_SUCCESS,\r\n    UNFOLLOW_USER_FAILURE,\r\n    UNFOLLOW_USER_REQUEST,\r\n    UNFOLLOW_USER_SUCCESS,\r\n    FOLLOW_USER_FAILURE,\r\n    FOLLOW_USER_REQUEST,\r\n    FOLLOW_USER_SUCCESS,\r\n    LOAD_FOLLOWERS_FAILURE,\r\n    LOAD_FOLLOWERS_REQUEST,\r\n    LOAD_FOLLOWERS_SUCCESS,\r\n    LOAD_FOLLOWINGS_FAILURE, \r\n    LOAD_FOLLOWINGS_REQUEST,\r\n    LOAD_FOLLOWINGS_SUCCESS,\r\n    REMOVE_FOLLOWER_FAILURE, \r\n    REMOVE_FOLLOWER_REQUEST, \r\n    REMOVE_FOLLOWER_SUCCESS,\r\n  } from '../reducers/user';\r\n  import axios from 'axios';\r\n\r\nfunction loginAPI(loginData){\r\n    // 서버에 요청을 보내는 부분 \r\n    return axios.post('/user/login',loginData,{\r\n        withCredentials: true, // 쿠기를 다른 도메인으로 보낼때 ->도메인이 다르기떄문에 설정 필요 (front)\r\n    });\r\n}\r\n\r\nfunction* login(action){\r\n    try {\r\n        const result = yield call(loginAPI, action.data);\r\n        console.log(result);\r\n        yield put({ // put은 dispatch 동일\r\n            type: LOG_IN_SUCCESS,\r\n            data: result.data,\r\n        });\r\n    } catch (error) { // loginAPI 실패\r\n        console.log(error);\r\n        yield put({\r\n            type: LOG_IN_FAILURE\r\n        });\r\n    }\r\n}\r\n\r\n\r\nfunction* watchLogin(){\r\n    yield takeLatest(LOG_IN_REQUEST, login)\r\n}\r\n\r\nfunction signUpAPI(signUPdata){\r\n    // 서버에 요청을 보내는 부분 \r\n    return axios.post('/user/',signUPdata);\r\n}\r\n\r\nfunction* signUp(action){\r\n    try {\r\n        yield call(signUpAPI, action.data);\r\n        yield put({ // put은 dispatch 동일\r\n            type: SIGN_UP_SUCCESS\r\n        });\r\n    } catch (error) { // loginAPI 실패\r\n        console.log(error);\r\n        yield put({\r\n            type: SIGN_UP_FAILURE\r\n        });\r\n    }\r\n}\r\n\r\nfunction* watchSignUp(){\r\n    yield takeLatest(SIGN_UP_REQUEST, signUp)\r\n}\r\n\r\nfunction logOutAPI() {\r\n    // 서버에 요청을 보내는 부분\r\n    return axios.post('/user/logout', {}, {\r\n      withCredentials: true,\r\n    });\r\n  }\r\n  \r\n  function* logOut() {\r\n    try {\r\n      // yield call(logOutAPI);\r\n      yield call(logOutAPI);\r\n      yield put({ // put은 dispatch 동일\r\n        type: LOG_OUT_SUCCESS,\r\n      });\r\n    } catch (e) { // loginAPI 실패\r\n      console.error(e);\r\n      yield put({\r\n        type: LOG_OUT_FAILURE,\r\n        error: e,\r\n      });\r\n    }\r\n  }\r\n  \r\n  function* watchLogOut() {\r\n    yield takeLatest(LOG_OUT_REQUEST, logOut);\r\n  }\r\n  \r\n  function loadUserAPI(userId) {\r\n    // 서버에 요청을 보내는 부분\r\n    return axios.get(userId ? `/user/${userId}` : '/user/', {\r\n      withCredentials: true,\r\n    });\r\n  }\r\n  \r\n  function* loadUser(action) {\r\n    try {\r\n      // yield call(loadUserAPI);\r\n      const result = yield call(loadUserAPI, action.data);\r\n      yield put({ // put은 dispatch 동일\r\n        type: LOAD_USER_SUCCESS,\r\n        data: result.data,\r\n        me: !action.data,\r\n      });\r\n    } catch (e) { // loginAPI 실패\r\n      console.error(e);\r\n      yield put({\r\n        type: LOAD_USER_FAILURE,\r\n        error: e,\r\n      });\r\n    }\r\n  }\r\n  \r\n  function* watchLoadUser() {\r\n    yield takeLatest(LOAD_USER_REQUEST, loadUser);\r\n  }\r\n\r\n  function followAPI(userId) {\r\n    // 서버에 요청을 보내는 부분\r\n    return axios.post(`/user/${userId}/follow`, {}, {\r\n      withCredentials: true,\r\n    });\r\n  }\r\n  \r\n  function* follow(action) {\r\n    try {\r\n      // yield call(followAPI);\r\n      const result = yield call(followAPI, action.data);\r\n      yield put({ // put은 dispatch 동일\r\n        type: FOLLOW_USER_SUCCESS,\r\n        data: result.data,\r\n      });\r\n    } catch (e) { // loginAPI 실패\r\n      console.error(e);\r\n      yield put({\r\n        type: FOLLOW_USER_FAILURE,\r\n        error: e,\r\n      });\r\n    }\r\n  }\r\n  \r\n  function* watchFollow() {\r\n    yield takeLatest(FOLLOW_USER_REQUEST, follow);\r\n  }\r\n  \r\n  function unfollowAPI(userId) {\r\n    // 서버에 요청을 보내는 부분\r\n    return axios.delete(`/user/${userId}/follow`, {\r\n      withCredentials: true,\r\n    });\r\n  }\r\n  \r\n  function* unfollow(action) {\r\n    try {\r\n      // yield call(unfollowAPI);\r\n      const result = yield call(unfollowAPI, action.data);\r\n      yield put({ // put은 dispatch 동일\r\n        type: UNFOLLOW_USER_SUCCESS,\r\n        data: result.data,\r\n      });\r\n    } catch (e) { // loginAPI 실패\r\n      console.error(e);\r\n      yield put({\r\n        type: UNFOLLOW_USER_FAILURE,\r\n        error: e,\r\n      });\r\n    }\r\n  }\r\n  \r\n  function* watchUnfollow() {\r\n    yield takeLatest(UNFOLLOW_USER_REQUEST, unfollow);\r\n  }\r\n  function loadFollowersAPI(userId) {\r\n    // 서버에 요청을 보내는 부분\r\n    return axios.get(`/user/${userId}/followers`, {\r\n      withCredentials: true,\r\n    });\r\n  }\r\n  \r\n  function* loadFollowers(action) {\r\n    try {\r\n      // yield call(loadFollowersAPI);\r\n      const result = yield call(loadFollowersAPI, action.data);\r\n      yield put({ // put은 dispatch 동일\r\n        type: LOAD_FOLLOWERS_SUCCESS,\r\n        data: result.data,\r\n      });\r\n    } catch (e) { // loginAPI 실패\r\n      console.error(e);\r\n      yield put({\r\n        type: LOAD_FOLLOWERS_FAILURE,\r\n        error: e,\r\n      });\r\n    }\r\n  }\r\n  \r\n  function* watchLoadFollowers() {\r\n    yield takeLatest(LOAD_FOLLOWERS_REQUEST, loadFollowers);\r\n  }\r\n  \r\n  function loadFollowingsAPI(userId) {\r\n    // 서버에 요청을 보내는 부분\r\n    return axios.get(`/user/${userId}/followings`, {\r\n      withCredentials: true,\r\n    });\r\n  }\r\n  \r\n  function* loadFollowings(action) {\r\n    try {\r\n      // yield call(loadFollowersAPI);\r\n      const result = yield call(loadFollowingsAPI, action.data);\r\n      yield put({ // put은 dispatch 동일\r\n        type: LOAD_FOLLOWINGS_SUCCESS,\r\n        data: result.data,\r\n      });\r\n    } catch (e) { // loginAPI 실패\r\n      console.error(e);\r\n      yield put({\r\n        type: LOAD_FOLLOWINGS_FAILURE,\r\n        error: e,\r\n      });\r\n    }\r\n  }\r\n  \r\n  function* watchLoadFollowings() {\r\n    yield takeLatest(LOAD_FOLLOWINGS_REQUEST, loadFollowings);\r\n  }\r\n  \r\n  function removeFollowerAPI(userId) {\r\n    // 서버에 요청을 보내는 부분\r\n    return axios.delete(`/user/${userId}/follower`, {\r\n      withCredentials: true,\r\n    });\r\n  }\r\n  \r\n  function* removeFollower(action) {\r\n    try {\r\n      // yield call(loadFollowersAPI);\r\n      const result = yield call(removeFollowerAPI, action.data);\r\n      yield put({ // put은 dispatch 동일\r\n        type: REMOVE_FOLLOWER_SUCCESS,\r\n        data: result.data,\r\n      });\r\n    } catch (e) { // loginAPI 실패\r\n      console.error(e);\r\n      yield put({\r\n        type: REMOVE_FOLLOWER_FAILURE,\r\n        error: e,\r\n      });\r\n    }\r\n  }\r\n  \r\n  function* watchRemoveFollower() {\r\n    yield takeLatest(REMOVE_FOLLOWER_REQUEST, removeFollower);\r\n  }\r\n\r\nexport default function* userSaga() {\r\n    yield all([\r\n        fork(watchLogin),\r\n        fork(watchLogOut),\r\n        fork(watchLoadUser),\r\n        fork(watchSignUp),\r\n        fork(watchFollow),\r\n        fork(watchUnfollow),\r\n        fork(watchLoadFollowers),\r\n        fork(watchLoadFollowings),\r\n        fork(watchRemoveFollower),\r\n    ]);\r\n}"],"mappings":"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","sourceRoot":""}